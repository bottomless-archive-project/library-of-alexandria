import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
    ext {
        set('artemis.version', '2.27.0')
        set('mongodb.version', '4.7.2')
        set('okhttp.version', '4.10.0')
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.7.5')
        classpath('com.adarshr:gradle-test-logger-plugin:2.0.0')
        classpath('com.github.ben-manes:gradle-versions-plugin:0.29.0')
        classpath('com.palantir.gradle.docker:gradle-docker:0.25.0')
    }
}

configure(subprojects.findAll {it.name != 'loa-frontend'}) {
    apply plugin: 'java'

    java {
        modularity.inferModulePath = true
        toolchain {
            languageVersion = JavaLanguageVersion.of(19)
        }
    }

    compileJava.dependsOn(processResources)
    compileJava {
        options.encoding = "UTF-8"
        doFirst {
            options.compilerArgs += [
                    '--add-modules', 'jdk.incubator.concurrent'
            ]
        }
    }
    compileTestJava {
        options.encoding = "UTF-8"
    }

    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
        }
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }

    apply plugin: 'com.adarshr.test-logger'
    apply plugin: 'pmd'

    pmd {
        ruleSets = []
        ruleSetFiles = files("${project.rootProject.projectDir}/analysis/pmd/ruleset.xml")
    }

    apply plugin: 'checkstyle'
    checkstyle {
        configFile = file("${project.rootProject.projectDir}/analysis/checkstyle/checkstyle.xml")
    }

    dependencies {
        // Spring starters
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter'

        // Configuration
        compileOnly group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
        annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'

        compileOnly files('E:\\tmp\\lombok-jdk19-20221010.jar')
        annotationProcessor files('E:\\tmp\\lombok-jdk19-20221010.jar')
        testCompileOnly files('E:\\tmp\\lombok-jdk19-20221010.jar')
        testAnnotationProcessor files('E:\\tmp\\lombok-jdk19-20221010.jar')

        // Testing
        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
        testImplementation group: 'org.mockito', name: 'mockito-inline'
    }

    apply plugin: "com.github.ben-manes.versions"
}
